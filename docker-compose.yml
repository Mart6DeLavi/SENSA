version: '3.8'

services:
  authentication-service-postgres:
    container_name: authentication-service-postgres
    hostname: authentication-service-postgres
    image: postgres:15.2
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: Sensa_Authentication_Service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 28859013
      PGDATA: /data
    volumes:
      - db-postgres-authentication:/data

  notification-service-postgres:
    container_name: notification-service-postgres
    hostname: notification-service-postgres
    image: postgres:15.2
    restart: always
    ports:
      - '5434:5432'
    environment:
      POSTGRES_DB: Sensa_Notification_Service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 28859013
      PGDATA: /data
    volumes:
      - db-postgres-notification:/data

  template-service-postgres:
    container_name: template-service-postgres
    hostname: template-service-postgres
    image: postgres:15.2
    restart: always
    ports:
      - '5435:5432'
    environment:
      POSTGRES_DB: Sensa_Template_Service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 28859013
      PGDATA: /data
    volumes:
      - db-postgres-template:/data

  user-management-service-postgres:
    container_name: user-management-service-postgres
    hostname: user-management-service-postgres
    image: postgres:15.2
    restart: always
    ports:
      - '5436:5432'
    environment:
      POSTGRES_DB: Sensa_User_Management_Service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 28859013
      PGDATA: /data
    volumes:
      - db-postgres-user-management:/data

  redis:
    container_name: redis
    image: redis:7.0.11
    restart: always
    ports:
      - '6379:6379'


  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    restart: always

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always


  sensa-discovery-server:
    container_name: sensa-discovery-server
    image: discovery-service:latest
    restart: always
    ports:
      - '8761:8761'

  sensa-api-gateway:
    container_name: sensa-api-gateway
    image: api-gateway:latest
    restart: always
    ports:
      - '8080:8007'
    depends_on:
      - sensa-discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sensa-authentication-service:
    container_name: sensa-authentication-service
    image: authentication-service:latest
    restart: always
    depends_on:
      - authentication-service-postgres
      - redis
      - sensa-discovery-server
      - broker
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sensa-user-management-service:
    container_name: sensa-user-management-service
    image: user-management-service:latest
    restart: always
    depends_on:
      - user-management-service-postgres
      - sensa-discovery-server
      - broker
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sensa-message-delivery-service:
    container_name: sensa-message-delivery-service
    image: message-delivery-service:latest
    restart: always
    depends_on:
      - sensa-discovery-server
      - broker
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sensa-notification-service:
    container_name: sensa-notification-service
    image: notification-service:latest
    restart: always
    depends_on:
      - notification-service-postgres
      - sensa-discovery-server
      - broker
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  sensa-template-service:
    container_name: sensa-template-service
    image: template-service:latest
    restart: always
    depends_on:
      - template-service-postgres
      - sensa-discovery-server
      - broker
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  db-postgres-authentication:
  db-postgres-notification:
  db-postgres-template:
  db-postgres-user-management:
